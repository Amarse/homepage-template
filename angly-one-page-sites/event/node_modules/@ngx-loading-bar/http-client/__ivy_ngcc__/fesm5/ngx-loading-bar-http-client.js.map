{"version":3,"file":"ngx-loading-bar-http-client.js","sources":["ng:/@ngx-loading-bar/http-client/loading-bar.interceptor.ts","ng:/@ngx-loading-bar/http-client/http.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;IAQE,+BAAoB,UAA6B;AAAI,QAAjC,eAAU,GAAV,UAAU,CAAmB;AAAC,KAAG;AACvD;AACO;AAAsB;AAAuB;AAAmB;AAAQ,IAA7E,yCAAS;AAAO;AAAsB;AAAuB;AAAmB;AAC5E,IADJ,UAAU,GAAqB,EAAE,IAAiB;AAAI,QAAtD,iBAmBC;AACH;AACyD,QAnBrD,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAAE;AAC7C,YAAM,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;AACzF,SAAK;AACL;AACwB,YAAd,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;AAC9B;AACwB,YAAhB,OAAO,GAAG,KAAK;AACvB;AAAyB,YAAf,iBAAiB,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AACjD,QAAI,CAAC,CAAC,SAAS,GAAG;AAAc,YAAb,cAAO;AAAC,iBAAR,UAAO,EAAP,qBAAO,EAAP,IAAO;AAAI,gBAAX,yBAAO;AAAC;AACnB,YAAF,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;AAC9B,YAAM,OAAO,GAAG,IAAI,CAAC;AACrB,YAAM,OAAO,iBAAiB,wBAAI,IAAI,GAAE;AACxC,SAAK,CAAC;AACN,QACI,OAAO,CAAC,CAAC,IAAI,CACX,QAAQ,CAAC,cAAM,OAAA,OAAO,IAAI,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAA,CAAC,CACtD,CAAC;AACN,KAAG,CAtBG;AAAC;kCADN,UAAU,5CACmB;AACE,gBARvB,iBAAiB;AAAG;;;;;kFAAS;AAAC,IA8BvC,4BAAC;AACA,CAzBD;AAAK;AAAC;AAAI;AACoB;AAGpB;ACVV;AAA8D,IAK9D;AAEe,KAW2B;8DAbzC,QAAQ,SAAC;IACR,OAAO,EAAE,0BACP,gBAAgB,0BAChB,gBAAgB,uBACjB,sBACD,OAAO,EAAE,0BACP;WAAgB,0BAChB,gBAAgB,uBACjB;YACD;EAAS,EAAE;AACT,EAAE,OAAO,EAAE,iBAAiB;AAAE,QAAQ,EAAE;oBAAqB,EAAE;CAAK,EAAE,IAAI,EAAE;EAC7E,mBACF;;;;;;;;;;;;;;;;;;gDACQ;AAAC,IAA+B,iCAAC;AACzC,CAdD;AAAK;AAAC;AAAI;AAES;AAOV;AAAI;AAAC;AACX;AAAkC;AAIhC;AAAI;AAAC;;ADXA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAmBA,AAjvBA,AAAA,AANA,AAAA,AA8BA,AAAA,AAxBA,ACNA,AAKA,AAaA,AAbA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAbA","sourcesContent":["import { LoadingBarService } from '@ngx-loading-bar/core';\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpEventType } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingBarInterceptor implements HttpInterceptor {\n  constructor(private loadingBar: LoadingBarService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // https://github.com/angular/angular/issues/18155\n    if (req.headers.has('ignoreLoadingBar')) {\n      return next.handle(req.clone({ headers: req.headers.delete('ignoreLoadingBar') }));\n    }\n\n    const r = next.handle(req);\n\n    let started = false;\n    const responseSubscribe = r.subscribe.bind(r);\n    r.subscribe = (...args) => {\n      this.loadingBar.start();\n      started = true;\n      return responseSubscribe(...args);\n    };\n\n    return r.pipe(\n      finalize(() => started && this.loadingBar.complete()),\n    );\n  }\n}\n","import { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoadingBarInterceptor } from './loading-bar.interceptor';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    LoadingBarModule,\n  ],\n  exports: [\n    HttpClientModule,\n    LoadingBarModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingBarInterceptor, multi: true },\n  ],\n})\nexport class LoadingBarHttpClientModule {}\n"]}